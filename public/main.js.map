{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_helpers/must-match.validator.ts","webpack:///./src/app/_models/exam.ts","webpack:///./src/app/_models/index.ts","webpack:///./src/app/_models/patient.ts","webpack:///./src/app/_models/user.ts","webpack:///./src/app/_services/exam/exam.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/patient/patient.service.ts","webpack:///./src/app/_services/user/user.service.ts","webpack:///./src/app/alert-message/alert-message.component.html","webpack:///./src/app/alert-message/alert-message.component.scss","webpack:///./src/app/alert-message/alert-message.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/exam-list-view/exam-list-view.component.html","webpack:///./src/app/exam-list-view/exam-list-view.component.scss","webpack:///./src/app/exam-list-view/exam-list-view.component.ts","webpack:///./src/app/exam-view/exam-view.component.html","webpack:///./src/app/exam-view/exam-view.component.scss","webpack:///./src/app/exam-view/exam-view.component.ts","webpack:///./src/app/logged-user-wrapper/logged-user-wrapper.component.html","webpack:///./src/app/logged-user-wrapper/logged-user-wrapper.component.scss","webpack:///./src/app/logged-user-wrapper/logged-user-wrapper.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register-form/register-form.component.html","webpack:///./src/app/register-form/register-form.component.scss","webpack:///./src/app/register-form/register-form.component.ts","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.scss","webpack:///./src/app/test/test.component.ts","webpack:///./src/app/user-component/user-component.component.html","webpack:///./src/app/user-component/user-component.component.scss","webpack:///./src/app/user-component/user-component.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { User } from './user';\r\n\r\nexport class Exam {\r\n  id: string;\r\n  date: Date;\r\n  user: any[];\r\n  patient: object;\r\n  voices: any[];\r\n  recordings: any[];\r\n\r\n  constructor(d: Date, uid:any, pid:string) {\r\n    this.date = d;\r\n    this.user = [uid];\r\n    this.patient = {\"id\":pid};\r\n  }\r\n}","export * from './user';\r\nexport * from './patient';\r\nexport * from './exam';","export class Patient {\r\n  id: string;\r\n  nome: string;\r\n  cognome: string;\r\n  sesso: string;\r\n  eta: number;\r\n  lateralita: string;\r\n  luogonascita: string;\r\n  professione: string;\r\n  scolarita: number;\r\n  lingua: string;\r\n  altro: string;\r\n  diagnosi: string;\r\n  data: string;\r\n  esaminatore: string;\r\n  esame: string;\r\n\r\n  constructor() {\r\n    this.nome = \"_name_\";\r\n    this.cognome = \"_surname_\";\r\n  }\r\n\r\n  isValid(): boolean {\r\n    if (this.nome && this.cognome && this.sesso && this.eta && this.lateralita && this.diagnosi) return true;\r\n    return false;\r\n  }\r\n}","export class User {\r\n  id: string;\r\n  username: string;\r\n  password: string;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n\r\n\r\n  constructor() {\r\n    this.id = \"_ID_\";\r\n    this.username = \"_USERNAME_\";\r\n    this.password = \"_PASSWORD_\";\r\n    this.email = \"_EMAIL_\";\r\n    this.name = \"_NAME_\";\r\n    this.surname = \"_SURNAME_\";\r\n  }\r\n\r\n  isValid(): boolean {\r\n    if (this.id && this.username && this.password && this.email) return true;\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Http, Response, RequestOptions, Headers, Request, RequestMethod } from '@angular/http';\nimport { Router } from \"@angular/router\";\nimport { User, Exam } from '../../_models/';\nimport { UserService } from '../user/user.service';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n\n  private activeExam: Exam;\n  private allMyExams: Exam[];\n  public lastExams: Exam[];\n  private last_exams_number = 5;\n\n  constructor(private userService: UserService, private http: Http) { }\n\n  getMyExamList() {\n    var usr_id = (this.userService.getLoggedUser() as User).id;\n    return this.http.get(API_URL + '/exam/?user=' + usr_id);\n  }\n\n  getExam(id: string) {\n    return this.http.get(API_URL + '/exam/'+id);\n  }\n\n  loadAllMyExams() {\n    this.getMyExamList().subscribe(response => {\n      var data = JSON.parse((<any>response)._body) as Exam[];\n      this.allMyExams = data;\n      this.lastExams = data.slice(data.length-this.last_exams_number);\n    });\n  }\n\n  getAllMyExams() {\n    return this.allMyExams;\n  }\n\n  getLastExams() {\n    return this.lastExams;\n  }\n\n  createNewExam(pid:string) {\n    var usr = this.userService.getLoggedUser();\n    if (usr) {\n      this.activeExam = new Exam(new Date(), usr.id, pid);\n      return this.http.post(API_URL + '/exam', this.activeExam);\n    }\n  }\n\n  setActive(id: string) {\n    this.getExam(id).subscribe(data => {\n      this.activeExam = JSON.parse((<any>data)._body);\n    });\n  }\n\n  saveOnLocal(e: Exam) {\n    this.activeExam = e;\n    localStorage.setItem('activeExam',JSON.stringify(this.activeExam));\n  }\n\n  loadFromLocal() {\n    var exam = JSON.parse(localStorage.getItem('activeExam'));\n    this.activeExam = exam;\n    return this.activeExam;\n  }\n\n  getActiveExam() {\n    if (this.activeExam)\n      return(this.activeExam.id);\n    else return false;\n  }\n\n  deleteExam(id: string) {\n    return this.http.delete(API_URL + '/exam/' + id);\n  }\n}\n","export * from './user/user.service';\r\nexport * from './exam/exam.service';\r\nexport * from './patient/patient.service';","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Http, Response, RequestOptions, Headers, Request, RequestMethod } from '@angular/http';\nimport { Router } from \"@angular/router\";\nimport { User, Exam, Patient } from '../../_models/';\nimport { UserService } from '../user/user.service';\nimport { ExamService } from '../exam/exam.service';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  constructor(private userService: UserService, \n      private examService: ExamService, \n      private http: Http\n      ) { }\n\n  getPatient(id: string) {\n    //console.log(\"asking for: \", id);\n    return this.http.get(API_URL + '/patient/' + id);\n  }\n\n  createNewPatient() {\n    var new_pat = new Patient();\n    return this.http.post(API_URL + '/patient', new_pat);\n  }\n\n  getMyPatientList() {\n    this.examService.getMyExamList().subscribe( data => {\n      var ex_list = JSON.parse((<any>data)._body);\n      console.log(ex_list);\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Http, Response, RequestOptions, Headers, Request, RequestMethod } from '@angular/http';\nimport { Router } from \"@angular/router\";\nimport { User } from '../../_models/';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public allUsers: User[];\n  public loggedUserID: string;\n  public loggedUser: User;\n\n  constructor(private router:Router, private http: Http ) { }\n\n  public getAllUsers(): Observable<User[]> {\n    return this.http.get(API_URL + '/user').pipe(\n      map(response => {\n        this.allUsers = response.json().map((data) => new User());\n        return this.allUsers;\n      })\n    );\n  }\n\n  public getUser(uid: string) {\n    //console.log(\"user.service's getUser()\");\n    return this.http.get(API_URL + '/user/' + uid);\n  }\n\n  public updateUser(u: User) {\n    return this.http.put(API_URL + '/user/' + u.id, u);\n  }\n\n  public logIn(u:string, p:string) {\n    var request_body = { username: u, password: p};\n    return this.http.post(API_URL + '/user/login', request_body);\n  }\n\n  public register(u: User) {\n    return this.http.post(API_URL + '/user', u);\n  }\n\n  public logUser(u: User) {\n    this.loggedUser = u;\n    this.loggedUserID = u.id;\n    this.saveOnLocal();\n  }\n\n  public getLoggedUser() {\n    this.loadFromLocal();\n    if (this.loggedUserID != null) {\n      return this.loggedUser;\n      //console.log(\"LoggedUserId trovato in user service -> getLoggedUser()\");\n    }\n    else {\n      //console.log(\"GNE!--\",this.loggedUserID);\n      return false;\n    }\n  }\n\n  public saveOnLocal() {\n    if (this.loggedUser!=null)\n      localStorage.setItem('currentUser', JSON.stringify(this.loggedUser));\n    else return false;\n  }\n\n  public loadFromLocal() {\n    var data = localStorage.getItem('currentUser');\n    if (data) {\n      this.loggedUser = JSON.parse(data);\n      this.loggedUserID = this.loggedUser.id;\n      return true;\n    }\n    else return false;\n  }\n\n  public logout() {\n    this.loggedUser = null;\n    this.loggedUserID = null;\n    localStorage.removeItem('currentUser');\n  }\n\n  public isUserLogged() {\n    return this.loadFromLocal();\n  }\n}\n\n","module.exports = \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n  <div class=\\\"alert-items\\\">\\n    <div class=\\\"alert-item\\\">\\n      <div class=\\\"alert-icon-wrapper\\\">\\n        <clr-icon class=\\\"alert-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n      </div>\\n      <span class=\\\"alert-text\\\">{{this.msg}}</span>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsZXJ0LW1lc3NhZ2UvYWxlcnQtbWVzc2FnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'alert-message',\n  templateUrl: './alert-message.component.html',\n  styleUrls: ['./alert-message.component.scss']\n})\nexport class AlertMessageComponent implements OnInit {\n\n  @Input() msg;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoggedUserWrapperComponent } from './logged-user-wrapper/logged-user-wrapper.component'; \nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ExamListViewComponent } from './exam-list-view/exam-list-view.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'main', component: LoggedUserWrapperComponent, children: [\n    { path: 'dashboard', component: DashboardComponent, outlet: 'logged' },\n    { path: 'exams', component: ExamListViewComponent, outlet: 'logged' },\n    //{ path: '', redirectTo: 'dashboard', pathMatch: 'prefix' }\n  ] },\n  { path: '', redirectTo: 'main', pathMatch: 'prefix'}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<a [routerLink]=\\\"[{ outlets: { primary: ['login'] } }]\\\">login</a>\\n<a [routerLink]=\\\"[{ outlets: { primary: ['main'] } }]\\\">main</a>\\n<a [routerLink]=\\\"['main',{ outlets: { logged: ['dashboard'] } }]\\\">dashboard</a>\\n\\n<router-outlet name=\\\"primary\\\"></router-outlet>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'apacs-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ClarityModule } from '@clr/angular';\nimport { UserComponentComponent } from './user-component/user-component.component';\n\nimport { UserService } from './_services';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { AlertMessageComponent } from './alert-message/alert-message.component';\nimport { LoggedUserWrapperComponent } from './logged-user-wrapper/logged-user-wrapper.component';\nimport { ExamViewComponent } from './exam-view/exam-view.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TestComponent } from './test/test.component';\nimport { ExamListViewComponent } from './exam-list-view/exam-list-view.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponentComponent,\n    LoginComponent,\n    RegisterFormComponent,\n    AlertMessageComponent,\n    LoggedUserWrapperComponent,\n    ExamViewComponent,\n    DashboardComponent,\n    TestComponent,\n    ExamListViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule, \n    BrowserAnimationsModule,\n    HttpModule,\n    //AngularFontAwesomeModule,\n    //NgbModule.forRoot()\n    ClarityModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"clr clr-col-12 clr-col-md-6 clr-col-lg-4\\\" style=\\\"display: inline-block; vertical-align: top;\\\">\\r\\n  <app-user-component></app-user-component>\\r\\n</div>\\r\\n<div class=\\\"clr clr-col-12 clr-col-md-6 clr-col-lg-4\\\" style=\\\"display: inline-block; vertical-align: top;\\\">\\r\\n  <app-test></app-test>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  onPrint() {\n    console.log(this.userService.getLoggedUser());\n  }\n\n}\n","module.exports = \"\\n<clr-datagrid [clrDgLoading]=\\\"loading\\\">\\n    <clr-dg-column>ID esame</clr-dg-column>\\n    <clr-dg-column>Nome Paziente\\n      <clr-dg-string-filter [clrDgStringFilter]=\\\"nameFilter\\\"></clr-dg-string-filter>\\n    </clr-dg-column>\\n    <clr-dg-column>Cognome Paziente\\n      <clr-dg-string-filter [clrDgStringFilter]=\\\"surnameFilter\\\"></clr-dg-string-filter>\\n    </clr-dg-column>\\n    <clr-dg-column>Data\\n      <clr-dg-string-filter [clrDgStringFilter]=\\\"dateFilter\\\"></clr-dg-string-filter>\\n    </clr-dg-column>\\n    <clr-dg-column>Azioni</clr-dg-column>\\n\\n    <clr-dg-row *clrDgItems=\\\"let exam of exams; let i=index\\\">\\n        <clr-dg-cell>{{exam.id}}</clr-dg-cell>\\n        <clr-dg-cell>{{exam.patient.nome}}</clr-dg-cell>\\n        <clr-dg-cell>{{exam.patient.cognome}}</clr-dg-cell>\\n        <clr-dg-cell>{{exam.date | date:\\\"dd/MM/yyyy\\\"}}</clr-dg-cell>\\n        <clr-dg-cell>\\n          <button class=\\\"btn btn-sm\\\" (click)=\\\"editExam(exam.id, exam.patient.id)\\\">\\n            <clr-icon shape=\\\"pencil\\\"></clr-icon> edit\\n          </button>\\n          <button class=\\\"btn btn-danger-outline btn-sm\\\" (click)=\\\"deleteExam(exam.id)\\\">\\n            <clr-icon shape=\\\"trash\\\"></clr-icon> delete\\n          </button>\\n          \\n        </clr-dg-cell>\\n    </clr-dg-row>\\n\\n    <clr-dg-footer>\\n        <clr-dg-pagination #pagination [clrDgTotalItems]=\\\"total\\\" [clrDgPageSize]=\\\"10\\\">\\n            <clr-dg-page-size [clrPageSizeOptions]=\\\"[10,20,50,100]\\\">Users per page</clr-dg-page-size>\\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\n            of {{pagination.totalItems}} exams\\n        </clr-dg-pagination>\\n    </clr-dg-footer>\\n</clr-datagrid>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW0tbGlzdC12aWV3L2V4YW0tbGlzdC12aWV3LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ClrDatagridSortOrder } from '@clr/angular';\nimport { ClrDatagridStringFilterInterface } from \"@clr/angular\";\n\nimport { User, Exam, Patient } from '../_models';\nimport { UserService, ExamService, PatientService } from '../_services';\n\nclass DateFilter implements ClrDatagridStringFilterInterface<Exam> {\n  private asd = false;\n  private date;\n  private d;\n  private m;\n  private y;\n  private cf;\n    accepts(exam: Exam, search: string):boolean {\n      this.cf=\"\";\n      this.date = new Date(exam.date);\n      this.d = (\"0\"+this.date.getDate()).slice(-2);\n      this.m = (\"0\"+(this.date.getMonth()+1)).slice(-2);\n      this.y = this.date.getFullYear();\n      this.cf = this.d+\"/\"+this.m+\"/\"+this.y+\" \"+  this.cf + this.d+\"-\"+this.m+\"-\"+this.y+\" \"+  this.cf + this.d+\".\"+this.m+\".\"+this.y+\" \";\n      this.cf = this.cf + \" \" +this.y+\"/\"+this.m+\"/\"+this.d+\" \" +this.y+\"-\"+this.m+\"-\"+this.d+\" \" +this.y+\".\"+this.m+\".\"+this.d+\" \";\n      this.cf = this.cf + \" \" +this.m+\"/\"+this.d+\"/\"+this.y+\" \" +this.m+\"-\"+this.d+\"-\"+this.y+\" \" +this.m+\".\"+this.d+\".\"+this.y+\" \";\n\n      console.log(this.cf);\n      return this.cf.includes(search);\n    }\n}\n\nclass NameFilter implements ClrDatagridStringFilterInterface<Exam> {\n  accepts(exam: Exam, search: string): boolean {\n    console.log((<any>exam.patient).id);\n    return ((<any>exam.patient).nome).toLowerCase().includes(search);\n  }\n}\n\nclass SurnameFilter implements ClrDatagridStringFilterInterface<Exam> {\n  accepts(exam: Exam, search: string): boolean {\n    return ((<any>exam.patient).cognome).toLowerCase().includes(search);\n  }\n}\n\n@Component({\n  selector: 'app-exam-list-view',\n  templateUrl: './exam-list-view.component.html',\n  styleUrls: ['./exam-list-view.component.scss']\n})\nexport class ExamListViewComponent implements OnInit {\n\n  descSort = ClrDatagridSortOrder.DESC;\n\n  private exams: Exam[];\n  private patients: Patient[] = [];\n  private total: number;\n  private dateFilter = new DateFilter();\n  private nameFilter = new NameFilter();\n  private surnameFilter = new SurnameFilter();\n  private loaded_data = false;\n\n  constructor(private examService: ExamService, private patientService: PatientService) { }\n\n  ngOnInit() {\n    this.refresh();\n    //console.log(this.patients);\n  }\n\n  refresh() {\n    this.examService.getMyExamList().subscribe(data => {\n      this.exams = JSON.parse((<any>data)._body);\n      //this.patients = [];\n      var pat_id = \"\";\n      this.total = this.exams.length;\n      for (let exam of this.exams) {\n        pat_id = (<any>exam.patient).id;\n        //console.log(pat_id);\n        this.patientService.getPatient(pat_id).subscribe(response => {\n          exam.patient = JSON.parse((<any>response)._body);\n        });\n      };\n      this.loaded_data = true;\n    });\n    //console.log(this.patients);\n  }\n\n  editExam(eid:string, pid:string) {\n    //this.examService.setActive(id);\n    console.log(\"edit exam: \",eid);\n    console.log(\"edit pat : \",pid);\n    this.patientService.getPatient(pid).subscribe(response => {\n      console.log(JSON.parse((<any>response)._body));\n    });\n  }\n\n  deleteExam(e) {\n    if (confirm(\"Sicuro di voler eliminare questo esame? L'azione non è reversibile\")) {\n      this.examService.deleteExam(e).subscribe(\n        response => {\n          this.refresh();\n          console.log(response);\n        },\n        errors => console.log(errors)\n      );\n      console.log(\"elimina \",e);\n    }\n  }\n}\n","module.exports = \"<p>\\n  exam-view works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW0tdmlldy9leGFtLXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exam-view',\n  templateUrl: './exam-view.component.html',\n  styleUrls: ['./exam-view.component.scss']\n})\nexport class ExamViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"main-container\\\">\\n    <div class=\\\"alert alert-app-level\\\">\\n        [Spazio per gli alert!]\\n    </div>\\n    <header class=\\\"header header-6\\\">\\n          <div class=\\\"branding\\\">\\n            <a href=\\\"...\\\" class=\\\"nav-link\\\">\\n                <clr-icon shape=\\\"bug\\\"></clr-icon>\\n                <span class=\\\"title\\\">APACS</span>\\n            </a>\\n          </div>\\n          <div class=\\\"header-nav\\\">\\n            <a [routerLink]=\\\"[{ outlets: { logged: ['dashboard'] } }]\\\" outletName=[logged] routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Dashboard</a>\\n            <a [routerLink]=\\\"[{ outlets: { logged: ['exams'] } }]\\\" outletName=[logged] routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Esami</a>\\n          </div>\\n          <div class=\\\"header-actions\\\">\\n            <clr-dropdown>\\n                <button class=\\\"nav-icon\\\" clrDropdownTrigger>\\n                    <clr-icon shape=\\\"user\\\"></clr-icon>\\n                    <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n                </button>\\n                <clr-dropdown-menu *clrIfOpen clrPosition=\\\"bottom-right\\\">\\n                    <a (click)=\\\"basic = true\\\" clrDropdownItem>Log out</a>\\n                </clr-dropdown-menu>\\n            </clr-dropdown>\\n          </div>\\n\\n    </header>\\n    <nav class=\\\"subnav\\\">\\n        [subnav]\\n    </nav>\\n    <div class=\\\"content-container\\\">\\n        <div class=\\\"content-area\\\">\\n          <router-outlet name=\\\"logged\\\"></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\\n<clr-modal [(clrModalOpen)]=\\\"basic\\\" [clrModalSize]=\\\"'sm'\\\">\\n    <h3 class=\\\"modal-title\\\">Attenzione</h3>\\n    <div class=\\\"modal-body\\\">\\n        <p>Stai per effettuare il Logout. Sei sicuro?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"basic = false\\\">Annulla</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Ok</button>\\n    </div>\\n</clr-modal>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2dlZC11c2VyLXdyYXBwZXIvbG9nZ2VkLXVzZXItd3JhcHBlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../_services';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-logged-user-wrapper',\n  templateUrl: './logged-user-wrapper.component.html',\n  styleUrls: ['./logged-user-wrapper.component.scss']\n})\nexport class LoggedUserWrapperComponent implements OnInit {\n\n  constructor(private router:Router, private userService: UserService) { }\n\n  ngOnInit() {\n    //this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\n    this.checkUser();\n  }\n\n  checkUser() {\n    //console.log(\"is user logged? \",this.userService.isUserLogged());\n    if (!this.userService.isUserLogged()) {\n      this.router.navigate(['login']);\n    }\n  }\n\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['login']);\n  }\n\n}\n","module.exports = \"<div class=\\\"login-wrapper\\\">\\n    <form class=\\\"login\\\">\\n        <label class=\\\"title\\\">\\n            <h3 class=\\\"welcome\\\">Benvenuti in</h3>\\n            APACS\\n            <h5 class=\\\"hint\\\">Utilizza le tue credenziali per accedere agli esami che hai effettuato, oppure registrati per ottenere un account.</h5>\\n        </label>\\n        <div class=\\\"login-group\\\">\\n            <input class=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" id=\\\"login_username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"this.username\\\">\\n            <input class=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" id=\\\"login_password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"this.password\\\">\\n            <div class=\\\"checkbox\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"rememberme\\\">\\n                <label for=\\\"rememberme\\\">\\n                    Ricordami\\n                </label>\\n            </div>\\n            <div class=\\\"error active\\\" [hidden]=\\\"!this.wrongCredential\\\">\\n              Username o password non validi\\n            </div>\\n            <div class=\\\"error active\\\" [hidden]=\\\"!this.missingCredential\\\">\\n              Username o password mancanti\\n            </div>\\n            <div class=\\\"error active\\\" [hidden]=\\\"!this.otherError\\\">\\n              {{this.error}}\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">LOG IN</button>\\n            <a class=\\\"signup link-pointer\\\" (click)=\\\"newUserModal = true\\\">Registrati</a>\\n        </div>\\n    </form>\\n</div>\\n\\n<clr-modal [(clrModalOpen)]=\\\"newUserModal\\\" class=\\\"modal-dialog modal-xl\\\">\\n  <h3 class=\\\"modal-title\\\">Registrazione nuovo utente</h3>\\n  <div class=\\\"modal-body\\\">\\n    <app-register-form></app-register-form>\\n  </div>\\n</clr-modal>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models';\nimport { UserService } from '../_services';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n\n  wrongCredential = false;\n  missingCredential = false;\n  otherError = false;\n  error: string;\n\n  constructor(private router:Router, private userService: UserService) { }\n\n  ngOnInit() {\n    if (this.userService.isUserLogged()) {\n      this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\n    }\n  }\n\n  onSubmit() {\n    this.tryLogin();\n  }\n\n  tryLogin() {\n    this.userService.logIn(this.username,this.password).subscribe( \n      response => {\n        this.onSuccess(response);\n      }, \n      error => {\n        this.onFail(error);\n      }\n    );\n  }\n\n  onSuccess(r) {\n    //console.log(\"Login effettuata correttamente.\");\n    var uid = JSON.parse(r._body).uid;\n    this.userService.getUser(uid).subscribe( data => {\n      var usr = JSON.parse((<any>data)._body) as User;\n      this.userService.logUser(usr);\n      this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\n    });\n  }\n\n  onFail(e) { \n    console.log(\"Fail on login: \", e);\n    if (e.status == \"400\" ) {\n      this.missingCredential = true;\n    }\n    else if (e.status == \"401\" ) {\n      this.clean();\n      this.wrongCredential = true;\n    }\n    else {\n      this.clean();\n      this.otherError = true;\n      this.error = \"http error \"+e.status+\" - \"+JSON.parse(e._body).message;\n    }\n  }\n\n  checkUser() {\n    if (this.userService.isUserLogged()) {\n      return true;\n    }\n    return false;\n  }\n\n  clean() {\n    this.wrongCredential = false;\n    this.missingCredential = false;\n    this.otherError = false;\n    this.error = \"\";\n  }\n\n}\n","module.exports = \"<form clrForm clrLayout=\\\"vertical\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>Username</label>\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n    </div>\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.username.errors\\\">\\n      <alert-message *ngIf=\\\"f.username.errors.required\\\" msg=\\\"Il campo 'Username' è obbligatorio\\\"></alert-message>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n    </div>\\n    <div class=\\\"errors\\\" *ngIf=\\\"f.email.errors\\\">\\n      <alert-message *ngIf=\\\"submitted && f.email.errors.required\\\" msg=\\\"Il campo 'Email' è obbligatorio\\\"></alert-message>\\n      <alert-message *ngIf=\\\"f.email.errors.email\\\" msg=\\\"Indirizzo email non valido\\\"></alert-message>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n    </div>\\n    <div class=\\\"errors\\\" *ngIf=\\\"f.password.errors\\\">\\n      <alert-message *ngIf=\\\"submitted && f.password.errors.required\\\" msg=\\\"Il campo 'Password' è obbligatorio\\\"></alert-message>\\n      <alert-message *ngIf=\\\"f.password.errors.minlength\\\" msg=\\\"La password dev'essere lunga almeno 6 caratteri\\\"></alert-message>\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Conferma Password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" />\\n    </div>\\n    <div class=\\\"errors\\\" *ngIf=\\\"f.confirmPassword.errors\\\">\\n      <alert-message *ngIf=\\\"submitted && f.confirmPassword.errors.required\\\" msg=\\\"Il campo 'Conferma password' è obbligatorio\\\"></alert-message>\\n      <alert-message *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\" msg=\\\"Le due password devono essere uguali\\\"></alert-message>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Nome</label>\\n        <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label>Cognome</label>\\n        <input type=\\\"text\\\" formControlName=\\\"surname\\\" class=\\\"form-control\\\" />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Registrati</button>\\n    </div>\\n</form>\"","module.exports = \".noFloat {\\n  float: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXItZm9ybS9DOlxcd29ya3NwYWNlXFxhcGFjcy1jbGllbnQvc3JjXFxhcHBcXHJlZ2lzdGVyLWZvcm1cXHJlZ2lzdGVyLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci1mb3JtL3JlZ2lzdGVyLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm9GbG9hdCB7XHJcbiAgZmxvYXQ6IG5vbmU7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { MustMatch } from '../_helpers/must-match.validator';\nimport { User } from '../_models';\nimport { UserService } from '../_services';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss']\n})\n\nexport class RegisterFormComponent implements OnInit {\n    registerForm: FormGroup;\n    submitted = false;\n\n    new_user: User;\n\n    constructor(private formBuilder: FormBuilder, private userService: UserService, private router:Router) { }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            name: [''],\n            surname: [''],\n            username: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            confirmPassword: ['', Validators.required]\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n        this.mapFromForm(this.registerForm.value);\n        this.askForRegistration(this.new_user);\n    }\n\n    mapFromForm(form_data) {\n      this.new_user = new User();\n      this.new_user.username = form_data.username;\n      this.new_user.password = form_data.password;\n      this.new_user.email = form_data.email;\n      this.new_user.name = form_data.name;\n      this.new_user.surname = form_data.surname;\n      this.new_user.id = null;\n    }\n\n    askForRegistration(u: User) {\n      console.log(\"asking to register user: \", u);\n      this.userService.register(u).subscribe(data => {\n        console.log(\"registered user: \", data);\n        this.userService.logIn(u.username, u.password).subscribe(response => {\n          var new_id = (JSON.parse((<any>response)._body)).uid;\n          //console.log(new_id);\n          this.userService.getUser(new_id).subscribe( answ => {\n            var usr = JSON.parse((<any>answ)._body) as User;\n            this.userService.logUser(usr);\n            this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\n          });\n        },\n        error => {\n          console.log(error);\n        })\n      });\n    }\n}","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-block\\\">\\n      <h4 class=\\\"card-title\\\">I tuoi ultimi esami</h4>\\n  </div>\\n  <div class=\\\"card-block\\\">\\n    <ul>\\n      <li *ngFor=\\\"let exam of lastExams\\\">\\n        {{ exam.id }} - {{exam.date}}\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"getMyExam()\\\">\\n        GET ALL MY EXAMS\\n    </button>\\n  </div>\\n  <div class=\\\"card-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"createNewExam()\\\">\\n        CREATE NEW EXAM AS CURRENT USER\\n    </button>\\n  </div>\\n  \\n  <div class=\\\"card-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"getActualExamId()\\\">\\n        GET ACTUAL EXAM ID\\n    </button>\\n  </div>\\n\\n  <div class=\\\"card-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"test(5)\\\">\\n        Last 5 exams\\n    </button>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MustMatch } from '../_helpers/must-match.validator';\nimport { User, Exam } from '../_models';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UserService } from '../_services';\nimport { ExamService } from '../_services';\nimport { PatientService } from '../_services';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  private lastExams: Exam[];\n\n  constructor(private examService: ExamService, private patientService: PatientService) {\n    this.examService.loadAllMyExams();\n  }\n\n  ngOnInit() {\n    this.getMyLastExams(5);\n  }\n\n  getMyLastExams(i:number) {\n    this.examService.getMyExamList().subscribe(data => {\n      var obj = JSON.parse((<any>data)._body);\n      this.lastExams = obj.slice(obj.length-i);\n    });\n  }\n\n  createNewExam() {\n    this.patientService.createNewPatient().subscribe(response => {\n      var pid = (JSON.parse( (<any>response)._body)).id;\n      this.examService.createNewExam(pid).subscribe(data => {\n        var new_exam = JSON.parse((<any>data)._body);\n        console.log(new_exam);\n        this.examService.saveOnLocal(new_exam);\n        this.getMyLastExams(5);\n      });\n    });\n  }\n\n  getActualExamId() {\n    console.log(this.examService.getActiveExam());\n  }\n\n  test(i) {\n    this.getMyLastExams(5);\n  };\n}\n","module.exports = \"\\n<clr-modal [(clrModalOpen)]=\\\"editUserModal\\\">\\n  <h3 class=\\\"modal-title\\\">Modifica i tuoi dati</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm clrLayout=\\\"vertical\\\" [formGroup]=\\\"editUserForm\\\" class=\\\"clr-form clr-form-horizontal\\\">\\n      <clr-input-container class=\\\"form-group\\\">\\n        <label for=\\\"user-username\\\">Username:</label>\\n        <input clrInput type=\\\"text\\\" [value]=\\\"this.logged_user.username\\\" placeholder=\\\"{{this.logged_user.username}}\\\" formControlName=\\\"username\\\" name=\\\"user-username\\\" [ngClass]=\\\"{ 'is-invalid': f.username.errors }\\\">\\n      </clr-input-container>\\n      <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.username.errors\\\">\\n        <alert-message *ngIf=\\\"f.username.errors.required\\\" msg=\\\"Il campo 'Username' è obbligatorio\\\"></alert-message>\\n      </div>\\n\\n      <clr-password-container class=\\\"form-group\\\">\\n        <label for=\\\"user-password\\\">Password:</label>\\n        <input clrPassword placeholder=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"user-password\\\" [ngClass]=\\\"{ 'is-invalid': (f.password.touched && f.password.errors) }\\\">\\n      </clr-password-container>\\n      <div class=\\\"errors\\\" *ngIf=\\\"f.password.touched && f.password.errors\\\">\\n        <alert-message *ngIf=\\\"f.password.errors.required\\\" msg=\\\"Il campo 'Password' è obbligatorio\\\"></alert-message>\\n        <alert-message *ngIf=\\\"f.password.errors.minlength\\\" msg=\\\"La password dev'essere lunga almeno 6 caratteri\\\"></alert-message>\\n      </div>\\n\\n      <clr-password-container class=\\\"form-group\\\">\\n        <label for=\\\"confirm-password\\\">Conferma password:</label>\\n        <input clrPassword placeholder=\\\"conferma password\\\" formControlName=\\\"confirmPassword\\\" name=\\\"confirm-password\\\" [ngClass]=\\\"{ 'is-invalid':(f.confirmPassword.touched && f.confirmPassword.errors)}\\\">\\n      </clr-password-container>\\n      <div class=\\\"errors\\\" *ngIf=\\\"f.confirmPassword.touched && f.confirmPassword.errors\\\">\\n        <alert-message *ngIf=\\\"f.confirmPassword.errors.required\\\" msg=\\\"Il campo 'Conferma password' è obbligatorio\\\"></alert-message>\\n        <alert-message *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\" msg=\\\"Le due password devono essere uguali\\\"></alert-message>\\n      </div>\\n\\n      <clr-input-container class=\\\"form-group\\\">\\n        <label for=\\\"user-mail\\\">eMail:</label>\\n        <input clrInput type=\\\"text\\\" placeholder=\\\"{{this.logged_user.email}}\\\" formControlName=\\\"email\\\" name=\\\"user-email\\\" [ngClass]=\\\"{ 'is-invalid': f.email.errors }\\\">\\n      </clr-input-container>\\n      <div class=\\\"errors\\\" *ngIf=\\\"f.email.errors\\\">\\n        <alert-message *ngIf=\\\"submitted && f.email.errors.required\\\" msg=\\\"Il campo 'Email' è obbligatorio\\\"></alert-message>\\n        <alert-message *ngIf=\\\"f.email.errors.email\\\" msg=\\\"Indirizzo email non valido\\\"></alert-message>\\n      </div>\\n\\n      <clr-input-container class=\\\"form-group\\\">\\n        <label for=\\\"user-name\\\">Nome:</label>\\n        <input clrInput type=\\\"text\\\" placeholder=\\\"{{this.logged_user.name}}\\\" formControlName=\\\"name\\\" name=\\\"user-name\\\">\\n      </clr-input-container>\\n\\n      <clr-input-container class=\\\"form-group\\\">\\n        <label for=\\\"user-surname\\\">Cognome:</label>\\n        <input clrInput type=\\\"text\\\" placeholder=\\\"{{this.logged_user.surname}}\\\" formControlName=\\\"surname\\\" name=\\\"user-surname\\\">\\n      </clr-input-container>\\n  \\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"editUserModal = false; onAbort();\\\">Annulla</button>\\n        <button [disabled]=\\\"!this.editUserForm.valid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editUserModal = false; onSave();\\\">Salva</button>\\n      </div>\\n    </form> \\n  </div>\\n</clr-modal>\\n\\n\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-block\\\">\\n      <h4 class=\\\"card-title\\\">Benvenuto <em>{{this.presentation_name}}</em></h4>\\n      <p class=\\\"card-text\\\">\\n      Questi sono i dati del tuo profilo\\n      </p>\\n  </div>\\n\\n  <ul class=\\\"list-group list-group-flush card-block\\\">\\n    <li class=\\\"clr-row\\\">\\n      <div class=\\\"clr-col-4\\\">\\n        ID:\\n      </div>\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.id}}</div>\\n    </li>\\n    <li class=\\\"clr-row\\\">\\n      <div class=\\\"clr-col-4\\\">\\n        Username:\\n      </div>\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.username}}</div>\\n    </li>\\n    <li class=\\\"clr-row\\\">\\n      <div class=\\\"clr-col-4\\\">\\n        eMail:\\n      </div>\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.email}}</div>\\n    </li>\\n    <li class=\\\"clr-row\\\">\\n      <div class=\\\"clr-col-4\\\">\\n        Nome:\\n      </div>\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.name}}</div>\\n    </li>\\n    <li class=\\\"clr-row\\\">\\n      <div class=\\\"clr-col-4\\\">\\n        Cognome:\\n      </div>\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.surname}}</div>\\n    </li>\\n  </ul>\\n  <div class=\\\"card-block\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"editUserModal = true\\\">\\n        <clr-icon shape=\\\"pencil\\\"></clr-icon> Modifica profilo\\n    </button>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItY29tcG9uZW50L3VzZXItY29tcG9uZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MustMatch } from '../_helpers/must-match.validator';\nimport { User } from '../_models';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UserService } from '../_services';\n\n@Component({\n  selector: 'app-user-component',\n  templateUrl: './user-component.component.html',\n  styleUrls: ['./user-component.component.scss']\n})\nexport class UserComponentComponent implements OnInit {\n\n  public closeResult: string;\n  public logged_user: User;\n  public presentation_name: string;\n  editUserForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private modalService: NgbModal, private userService: UserService) { }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', centered: true}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any) {\n    if (reason === ModalDismissReasons.ESC) {\n      console.log('Modal dismissed by pressing ESC');\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      console.log('Modal dismissed by clicking on a backdrop');\n    } else {\n      console.log(`Modal dismissed with: ${reason}`);\n    }\n  }\n\n  ngOnInit() {\n    this.initForm();\n    this.logged_user = this.userService.getLoggedUser() as User;\n    this.presentation_name = this.logged_user.username;\n    if (!(this.logged_user.name === \"\")) {\n      this.presentation_name = this.logged_user.name;\n    }\n    this.initFormData();\n  }\n\n  get f() { return this.editUserForm.controls; }\n\n  initForm() {\n    this.editUserForm = this.formBuilder.group({\n        name: [''],\n        surname: [''],\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n    }, {\n        validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  initFormData() {\n    this.editUserForm.controls['username'].setValue(this.logged_user.username);\n    this.editUserForm.controls['email'].setValue(this.logged_user.email);\n    this.editUserForm.controls['name'].setValue(this.logged_user.name);\n    this.editUserForm.controls['surname'].setValue(this.logged_user.surname);\n  }\n\n  printData() {\n    console.log(this.logged_user);\n  }\n\n  onSave() {\n    if (!this.save()) this.abort();\n    else {\n      this.logged_user.username = this.editUserForm.controls.username.value;\n      this.logged_user.email = this.editUserForm.controls.email.value;\n      this.logged_user.password = this.editUserForm.controls.password.value;\n      this.logged_user.name = this.editUserForm.controls.name.value;\n      this.logged_user.surname = this.editUserForm.controls.surname.value;\n      this.userService.updateUser(this.logged_user).subscribe(data => {\n        var new_usr = JSON.parse((<any>data)._body);\n        this.userService.logUser(new_usr);\n      },\n      error => {\n        console.log(error);\n      })\n    }\n  }\n\n  save() {\n    return confirm(\"Sicuro di voler salvare? L'azione non è reversibile\");\n  }\n\n  onAbort() {\n    this.abort();\n  }\n\n  abort() { }\n\n  getAllUsers() {\n    this.userService.getAllUsers().subscribe(data => {\n      console.log(this.userService.allUsers);\n    });\n  }\n\n  logIn() {\n    this.userService.logIn(\"admin\",\"password\").subscribe(data => {\n      console.log(this.userService.loggedUserID);\n    });\n  }\n\n  logged() {\n    //this.userService.getLoggedUser().subscribe(data => {\n      console.log(this.userService.getLoggedUser());\n    //})\n  }\n\n  print() {\n    console.log(this.editUserForm.controls);\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // URL of development API\n  apiUrl: 'http://localhost:2403'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}