{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_helpers/must-match.validator.ts","webpack:///./src/app/_models/exam.ts","webpack:///./src/app/_models/index.ts","webpack:///./src/app/_models/patient.ts","webpack:///./src/app/_models/user.ts","webpack:///./src/app/_services/exam/exam.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/patient/patient.service.ts","webpack:///./src/app/_services/user/user.service.ts","webpack:///./src/app/alert-message/alert-message.component.html","webpack:///./src/app/alert-message/alert-message.component.scss","webpack:///./src/app/alert-message/alert-message.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit-patient/edit-patient.component.html","webpack:///./src/app/edit-patient/edit-patient.component.scss","webpack:///./src/app/edit-patient/edit-patient.component.ts","webpack:///./src/app/exam-list-view/exam-list-view.component.html","webpack:///./src/app/exam-list-view/exam-list-view.component.scss","webpack:///./src/app/exam-list-view/exam-list-view.component.ts","webpack:///./src/app/exam-view/exam-view.component.html","webpack:///./src/app/exam-view/exam-view.component.scss","webpack:///./src/app/exam-view/exam-view.component.ts","webpack:///./src/app/logged-user-wrapper/logged-user-wrapper.component.html","webpack:///./src/app/logged-user-wrapper/logged-user-wrapper.component.scss","webpack:///./src/app/logged-user-wrapper/logged-user-wrapper.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register-form/register-form.component.html","webpack:///./src/app/register-form/register-form.component.scss","webpack:///./src/app/register-form/register-form.component.ts","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.scss","webpack:///./src/app/test/test.component.ts","webpack:///./src/app/user-component/user-component.component.html","webpack:///./src/app/user-component/user-component.component.scss","webpack:///./src/app/user-component/user-component.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { User } from './user';\r\n\r\nexport class Exam {\r\n  id: string;\r\n  date: Date;\r\n  user: any[];\r\n  patient: object;\r\n  voices: any[];\r\n  recordings: any[];\r\n\r\n  constructor(d: Date, uid:any, pid:string) {\r\n    this.date = d;\r\n    this.user = [uid];\r\n    this.patient = {\"id\":pid};\r\n  }\r\n}","export * from './user';\r\nexport * from './patient';\r\nexport * from './exam';","export class Patient {\r\n  id: string;\r\n  nome: string;\r\n  cognome: string;\r\n  sesso: boolean;\r\n  eta: number;\r\n  lateralita: boolean;\r\n  luogonascita: string;\r\n  professione: string;\r\n  scolarita: number;\r\n  lingua: string;\r\n  altro: string;\r\n  diagnosi: string;\r\n  data: string;\r\n  esaminatore: string;\r\n  esame: string;\r\n\r\n  constructor() {\r\n    this.nome = \"\";\r\n    this.cognome = \"\";\r\n    this.sesso = null;\r\n    this.eta =0;\r\n    this.lateralita = null;\r\n    this.luogonascita =\"\";\r\n    this.professione =\"\";\r\n    this.scolarita =0;\r\n    this.lingua =\"\";\r\n    this.altro =\"\";\r\n    this.diagnosi =\"\";\r\n    this.data =\"\";\r\n    this.esaminatore =\"\";\r\n    this.esame =\"\";\r\n  }\r\n\r\n  isValid(): boolean {\r\n    if (this.nome && this.cognome && this.sesso && this.eta && this.lateralita && this.diagnosi) return true;\r\n    return false;\r\n  }\r\n}","export class User {\r\n  id: string;\r\n  username: string;\r\n  password: string;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n\r\n\r\n  constructor() {\r\n    this.id = \"_ID_\";\r\n    this.username = \"_USERNAME_\";\r\n    this.password = \"_PASSWORD_\";\r\n    this.email = \"_EMAIL_\";\r\n    this.name = \"_NAME_\";\r\n    this.surname = \"_SURNAME_\";\r\n  }\r\n\r\n  isValid(): boolean {\r\n    if (this.id && this.username && this.password && this.email) return true;\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Http, Response, RequestOptions, Headers, Request, RequestMethod } from '@angular/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { User, Exam } from '../../_models/';\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExamService {\r\n\r\n  public activeExam: Exam;\r\n  public activeExamId: string;\r\n  public allMyExams: Exam[];\r\n  public lastExams: Exam[];\r\n  public last_exams_number = 5;\r\n\r\n  constructor(private userService: UserService, private http: Http) { }\r\n\r\n  getMyExamList() {\r\n    var usr_id = (this.userService.getLoggedUser() as User).id;\r\n    return this.http.get(API_URL + '/exam/?user=' + usr_id);\r\n  }\r\n\r\n  getExam(id: string) {\r\n    return this.http.get(API_URL + '/exam/'+id);\r\n  }\r\n\r\n  loadAllMyExams() {\r\n    this.getMyExamList().subscribe(response => {\r\n      var data = JSON.parse((<any>response)._body) as Exam[];\r\n      this.allMyExams = data;\r\n      this.lastExams = data.slice(data.length-this.last_exams_number);\r\n    });\r\n  }\r\n\r\n  getAllMyExams() {\r\n    return this.allMyExams;\r\n  }\r\n\r\n  getLastExams() {\r\n    return this.lastExams;\r\n  }\r\n\r\n  createNewExam(pid:string) {\r\n    var usr = this.userService.getLoggedUser();\r\n    if (usr) {\r\n      this.activeExam = new Exam(new Date(), usr.id, pid);\r\n      return this.http.post(API_URL + '/exam', this.activeExam);\r\n    }\r\n  }\r\n\r\n  setActive(id: string) {\r\n    this.activeExamId = id;\r\n    this.getExam(id).subscribe(data => {\r\n      this.activeExam = JSON.parse((<any>data)._body) as Exam;\r\n      this.saveOnLocal(this.activeExam);\r\n      console.log(\"EXA service: \",this.activeExam);\r\n    },\r\n    error => console.log(error));\r\n  }\r\n\r\n  saveOnLocal(e: Exam) {\r\n    this.activeExam = e;\r\n    localStorage.setItem('activeExam',JSON.stringify(this.activeExam));\r\n  }\r\n\r\n  loadFromLocal() {\r\n    var exam = JSON.parse(localStorage.getItem('activeExam'));\r\n    this.activeExam = exam;\r\n    return this.activeExam;\r\n  }\r\n\r\n  getActiveExam() {\r\n    this.loadFromLocal();\r\n    return this.activeExam;\r\n  }\r\n\r\n  deleteExam(id: string) {\r\n    return this.http.delete(API_URL + '/exam/' + id);\r\n  }\r\n\r\n  saveExam(e: Exam) {\r\n    return this.http.post(API_URL + '/exam/' + e.id , e)\r\n  }\r\n\r\n  update() {\r\n    \r\n  }\r\n}\r\n","export * from './user/user.service';\r\nexport * from './exam/exam.service';\r\nexport * from './patient/patient.service';","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Http, Response, RequestOptions, Headers, Request, RequestMethod } from '@angular/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { User, Exam, Patient } from '../../_models/';\r\nimport { UserService } from '../user/user.service';\r\nimport { ExamService } from '../exam/exam.service';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatientService {\r\n\r\n  public activePatient: Patient;\r\n  public activePatientId: string;\r\n\r\n  constructor(private userService: UserService, \r\n      private examService: ExamService, \r\n      private http: Http\r\n      ) { }\r\n\r\n  getPatient(id: string) {\r\n    //console.log(\"asking for: \", id);\r\n    return this.http.get(API_URL + '/patient/' + id);\r\n  }\r\n\r\n  setActive(pid: string) {\r\n    this.activePatientId = pid;\r\n    this.getPatient(pid).subscribe(response => {\r\n      this.activePatient = JSON.parse((<any>response)._body) as Patient;\r\n      this.saveOnLocal(this.activePatient);\r\n      console.log(\"PAT service: \",this.activePatient);\r\n    },\r\n    error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  saveOnLocal(p: Patient) {\r\n    //this.activePatient = p;\r\n    localStorage.setItem('activePatient',JSON.stringify(this.activePatient));\r\n    this.loadFromLocal();\r\n  }\r\n\r\n  loadFromLocal() {\r\n    var patient = JSON.parse(localStorage.getItem('activePatient'));\r\n    this.activePatient = patient;\r\n    return this.activePatient;\r\n  }\r\n\r\n  getActivePatient(): Patient {\r\n    this.loadFromLocal();\r\n    return this.activePatient;\r\n  }\r\n\r\n  createNewPatient() {\r\n    var new_pat = new Patient();\r\n    return this.http.post(API_URL + '/patient', new_pat);\r\n  }\r\n\r\n  getMyPatientList() {\r\n    this.examService.getMyExamList().subscribe( data => {\r\n      var ex_list = JSON.parse((<any>data)._body);\r\n      console.log(ex_list);\r\n    })\r\n  }\r\n\r\n  savePatient(p: Patient) {\r\n    return this.http.post(API_URL + '/patient/' + p.id, p);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Http, Response, RequestOptions, Headers, Request, RequestMethod } from '@angular/http';\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from '../../_models/';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  public allUsers: User[];\r\n  public loggedUserID: string;\r\n  public loggedUser: User;\r\n\r\n  constructor(private router:Router, private http: Http ) { }\r\n\r\n  public getAllUsers(): Observable<User[]> {\r\n    return this.http.get(API_URL + '/user').pipe(\r\n      map(response => {\r\n        this.allUsers = response.json().map((data) => new User());\r\n        return this.allUsers;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getUser(uid: string) {\r\n    //console.log(\"user.service's getUser()\");\r\n    return this.http.get(API_URL + '/user/' + uid);\r\n  }\r\n\r\n  public updateUser(u: User) {\r\n    return this.http.put(API_URL + '/user/' + u.id, u);\r\n  }\r\n\r\n  public logIn(u:string, p:string) {\r\n    var request_body = { username: u, password: p};\r\n    return this.http.post(API_URL + '/user/login', request_body);\r\n  }\r\n\r\n  public register(u: User) {\r\n    return this.http.post(API_URL + '/user', u);\r\n  }\r\n\r\n  public logUser(u: User) {\r\n    this.loggedUser = u;\r\n    this.loggedUserID = u.id;\r\n    this.saveOnLocal();\r\n  }\r\n\r\n  public getLoggedUser() {\r\n    this.loadFromLocal();\r\n    //if (this.loggedUserID != null) {\r\n      return this.loggedUser;\r\n    //}\r\n    //else {\r\n      //return false;\r\n    //}\r\n  }\r\n\r\n  public saveOnLocal() {\r\n    if (this.loggedUser!=null)\r\n      localStorage.setItem('currentUser', JSON.stringify(this.loggedUser));\r\n    else return false;\r\n  }\r\n\r\n  public loadFromLocal() {\r\n    var data = localStorage.getItem('currentUser');\r\n    if (data) {\r\n      this.loggedUser = JSON.parse(data);\r\n      this.loggedUserID = this.loggedUser.id;\r\n      return true;\r\n    }\r\n    else return false;\r\n  }\r\n\r\n  public logout() {\r\n    this.loggedUser = null;\r\n    this.loggedUserID = null;\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('activePatient');\r\n    localStorage.removeItem('activeExam');\r\n  }\r\n\r\n  public isUserLogged() {\r\n    return this.loadFromLocal();\r\n  }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n  <div class=\\\"alert-items\\\">\\r\\n    <div class=\\\"alert-item\\\">\\r\\n      <div class=\\\"alert-icon-wrapper\\\">\\r\\n        <clr-icon class=\\\"alert-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\r\\n      </div>\\r\\n      <span class=\\\"alert-text\\\">{{this.msg}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsZXJ0LW1lc3NhZ2UvYWxlcnQtbWVzc2FnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'alert-message',\r\n  templateUrl: './alert-message.component.html',\r\n  styleUrls: ['./alert-message.component.scss']\r\n})\r\nexport class AlertMessageComponent implements OnInit {\r\n\r\n  @Input() msg;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoggedUserWrapperComponent } from './logged-user-wrapper/logged-user-wrapper.component'; \r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ExamListViewComponent } from './exam-list-view/exam-list-view.component';\r\nimport { ExamViewComponent } from './exam-view/exam-view.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'main', component: LoggedUserWrapperComponent, children: [\r\n    { path: 'dashboard', component: DashboardComponent, outlet: 'logged' },\r\n    { path: 'exams', component: ExamListViewComponent, outlet: 'logged' },\r\n    { path: 'exam', component: ExamViewComponent, outlet: 'logged' }\r\n  ] },\r\n  { path: '', redirectTo: 'main', pathMatch: 'prefix'}\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<a [routerLink]=\\\"[{ outlets: { primary: ['login'] } }]\\\">login</a>\\r\\n<a [routerLink]=\\\"[{ outlets: { primary: ['main'] } }]\\\">main</a>\\r\\n<a [routerLink]=\\\"['main',{ outlets: { logged: ['dashboard'] } }]\\\">dashboard</a>\\r\\n\\r\\n<router-outlet name=\\\"primary\\\"></router-outlet>\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'apacs-client';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { ClarityModule } from '@clr/angular';\r\nimport { UserComponentComponent } from './user-component/user-component.component';\r\n\r\nimport { UserService } from './_services';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterFormComponent } from './register-form/register-form.component';\r\nimport { AlertMessageComponent } from './alert-message/alert-message.component';\r\nimport { LoggedUserWrapperComponent } from './logged-user-wrapper/logged-user-wrapper.component';\r\nimport { ExamViewComponent } from './exam-view/exam-view.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { TestComponent } from './test/test.component';\r\nimport { ExamListViewComponent } from './exam-list-view/exam-list-view.component';\r\nimport { EditPatientComponent } from './edit-patient/edit-patient.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponentComponent,\r\n    LoginComponent,\r\n    RegisterFormComponent,\r\n    AlertMessageComponent,\r\n    LoggedUserWrapperComponent,\r\n    ExamViewComponent,\r\n    DashboardComponent,\r\n    TestComponent,\r\n    ExamListViewComponent,\r\n    EditPatientComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule, \r\n    BrowserAnimationsModule,\r\n    HttpModule,\r\n    //AngularFontAwesomeModule,\r\n    //NgbModule.forRoot()\r\n    ClarityModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"clr clr-col-12 clr-col-md-6 clr-col-lg-4\\\" style=\\\"display: inline-block; vertical-align: top;\\\">\\r\\n  <app-user-component></app-user-component>\\r\\n</div>\\r\\n<div class=\\\"clr clr-col-12 clr-col-md-6 clr-col-lg-4\\\" style=\\\"display: inline-block; vertical-align: top;\\\">\\r\\n  <app-test></app-test>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onPrint() {\r\n    console.log(this.userService.getLoggedUser());\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  edit-patient works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcGF0aWVudC9lZGl0LXBhdGllbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-patient',\r\n  templateUrl: './edit-patient.component.html',\r\n  styleUrls: ['./edit-patient.component.scss']\r\n})\r\nexport class EditPatientComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<clr-datagrid [clrDgLoading]=\\\"loading\\\">\\r\\n    <clr-dg-column>ID esame</clr-dg-column>\\r\\n    <clr-dg-column [clrDgField]=\\\"'patient.nome'\\\">Nome Paziente\\r\\n      <clr-dg-string-filter [clrDgStringFilter]=\\\"nameFilter\\\"></clr-dg-string-filter>\\r\\n    </clr-dg-column>\\r\\n    <clr-dg-column [clrDgField]=\\\"'patient.nome'\\\">Cognome Paziente\\r\\n      <clr-dg-string-filter [clrDgStringFilter]=\\\"surnameFilter\\\"></clr-dg-string-filter>\\r\\n    </clr-dg-column>\\r\\n    <clr-dg-column [clrDgField]=\\\"'date'\\\">Data\\r\\n      <clr-dg-string-filter [clrDgStringFilter]=\\\"dateFilter\\\"></clr-dg-string-filter>\\r\\n    </clr-dg-column>\\r\\n    <clr-dg-column>Azioni</clr-dg-column>\\r\\n\\r\\n    <clr-dg-row *clrDgItems=\\\"let exam of exams; let i=index\\\">\\r\\n        <clr-dg-cell>{{exam.id}}</clr-dg-cell>\\r\\n        <clr-dg-cell>{{exam.patient.nome}}</clr-dg-cell>\\r\\n        <clr-dg-cell>{{exam.patient.cognome}}</clr-dg-cell>\\r\\n        <clr-dg-cell>{{exam.date | date:\\\"dd/MM/yyyy\\\"}}</clr-dg-cell>\\r\\n        <clr-dg-cell>\\r\\n          <button class=\\\"btn btn-sm\\\" (click)=\\\"editExam(exam.id, exam.patient.id)\\\">\\r\\n            <clr-icon shape=\\\"pencil\\\"></clr-icon> edit\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-danger-outline btn-sm\\\" (click)=\\\"deleteExam(exam.id)\\\">\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon> delete\\r\\n          </button>\\r\\n          \\r\\n        </clr-dg-cell>\\r\\n    </clr-dg-row>\\r\\n\\r\\n    <clr-dg-footer>\\r\\n        <clr-dg-pagination #pagination [clrDgTotalItems]=\\\"total\\\" [clrDgPageSize]=\\\"10\\\">\\r\\n            <clr-dg-page-size [clrPageSizeOptions]=\\\"[10,20,50,100]\\\">Users per page</clr-dg-page-size>\\r\\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\r\\n            of {{pagination.totalItems}} exams\\r\\n        </clr-dg-pagination>\\r\\n    </clr-dg-footer>\\r\\n</clr-datagrid>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW0tbGlzdC12aWV3L2V4YW0tbGlzdC12aWV3LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ClrDatagridSortOrder } from '@clr/angular';\r\nimport { ClrDatagridStringFilterInterface } from \"@clr/angular\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { User, Exam, Patient } from '../_models';\r\nimport { UserService, ExamService, PatientService } from '../_services';\r\n\r\nclass DateFilter implements ClrDatagridStringFilterInterface<Exam> {\r\n  private asd = false;\r\n  private date;\r\n  private d;\r\n  private m;\r\n  private y;\r\n  private cf;\r\n    accepts(exam: Exam, search: string):boolean {\r\n      this.cf=\"\";\r\n      this.date = new Date(exam.date);\r\n      this.d = (\"0\"+this.date.getDate()).slice(-2);\r\n      this.m = (\"0\"+(this.date.getMonth()+1)).slice(-2);\r\n      this.y = this.date.getFullYear();\r\n      this.cf = this.d+\"/\"+this.m+\"/\"+this.y+\" \"+  this.cf + this.d+\"-\"+this.m+\"-\"+this.y+\" \"+  this.cf + this.d+\".\"+this.m+\".\"+this.y+\" \";\r\n      this.cf = this.cf + \" \" +this.y+\"/\"+this.m+\"/\"+this.d+\" \" +this.y+\"-\"+this.m+\"-\"+this.d+\" \" +this.y+\".\"+this.m+\".\"+this.d+\" \";\r\n      this.cf = this.cf + \" \" +this.m+\"/\"+this.d+\"/\"+this.y+\" \" +this.m+\"-\"+this.d+\"-\"+this.y+\" \" +this.m+\".\"+this.d+\".\"+this.y+\" \";\r\n\r\n      console.log(this.cf);\r\n      return this.cf.includes(search);\r\n    }\r\n}\r\n\r\nclass NameFilter implements ClrDatagridStringFilterInterface<Exam> {\r\n  accepts(exam: Exam, search: string): boolean {\r\n    console.log((<any>exam.patient).id);\r\n    return ((<any>exam.patient).nome).toLowerCase().includes(search);\r\n  }\r\n}\r\n\r\nclass SurnameFilter implements ClrDatagridStringFilterInterface<Exam> {\r\n  accepts(exam: Exam, search: string): boolean {\r\n    return ((<any>exam.patient).cognome).toLowerCase().includes(search);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-exam-list-view',\r\n  templateUrl: './exam-list-view.component.html',\r\n  styleUrls: ['./exam-list-view.component.scss']\r\n})\r\nexport class ExamListViewComponent implements OnInit {\r\n\r\n  descSort = ClrDatagridSortOrder.DESC;\r\n\r\n  private exams: Exam[];\r\n  private patients: Patient[] = [];\r\n  private total: number;\r\n  private dateFilter = new DateFilter();\r\n  private nameFilter = new NameFilter();\r\n  private surnameFilter = new SurnameFilter();\r\n  private loaded_data = false;\r\n\r\n  constructor(private router:Router, private examService: ExamService, private patientService: PatientService) { }\r\n\r\n  ngOnInit() {\r\n    this.refresh();\r\n    //console.log(this.patients);\r\n  }\r\n\r\n  refresh() {\r\n    this.examService.getMyExamList().subscribe(data => {\r\n      this.exams = JSON.parse((<any>data)._body);\r\n      //this.patients = [];\r\n      var pat_id = \"\";\r\n      this.total = this.exams.length;\r\n      for (let exam of this.exams) {\r\n        pat_id = (<any>exam.patient).id;\r\n        //console.log(pat_id);\r\n        this.patientService.getPatient(pat_id).subscribe(response => {\r\n          exam.patient = JSON.parse((<any>response)._body);\r\n        });\r\n      };\r\n      this.loaded_data = true;\r\n    });\r\n    //console.log(this.patients);\r\n  }\r\n\r\n  editExam(eid:string, pid:string) {\r\n    this.examService.setActive(eid);\r\n    this.patientService.setActive(pid);\r\n    //console.log(this.examService.getActiveExam(), this.patientService.getActivePatient());\r\n    this.examService.getExam(eid).subscribe(_exam => {\r\n      this.patientService.getPatient(pid).subscribe(_pat => {\r\n        this.router.navigate(['main',{ outlets: { logged: ['exam'] } }]);\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteExam(e) {\r\n    if (confirm(\"Sicuro di voler eliminare questo esame? L'azione non è reversibile\")) {\r\n      this.examService.deleteExam(e).subscribe(\r\n        response => {\r\n          this.refresh();\r\n          console.log(response);\r\n        },\r\n        errors => console.log(errors)\r\n      );\r\n      console.log(\"elimina \",e);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<form clrForm clrLayout=\\\"horizontal\\\" [formGroup]=\\\"patientForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    \\r\\n    <h2>Dati Esame</h2>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Esaminatore</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"esaminatore\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.esaminatore.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.esaminatore.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.esaminatore.errors.required\\\" msg=\\\"Il campo 'Esaminatore' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Data</label>\\r\\n      <input type=\\\"date\\\" formControlName=\\\"data\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.data.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.data.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.data.errors.required\\\" msg=\\\"Il campo 'Data' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <h2>Dati Personali</h2>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Nome</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"nome\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.nome.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.nome.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.nome.errors.required\\\" msg=\\\"Il campo 'Nome' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Cognome</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"cognome\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.cognome.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.cognome.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.cognome.errors.required\\\" msg=\\\"Il campo 'Cognome' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Sesso</label>\\r\\n      <div class=\\\"clr-control-container clr-control-inline\\\">\\r\\n        <div class=\\\"clr-radio-wrapper\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"sex-radio1\\\" formControlName=\\\"sesso\\\" value=\\\"true\\\" class=\\\"clr-radio\\\" [checked]=\\\"show_sex\\\">\\r\\n          <label for=\\\"sex-radio1\\\" class=\\\"clr-control-label\\\">M</label>\\r\\n        </div>\\r\\n        <div class=\\\"clr-radio-wrapper\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"sex-radio2\\\" formControlName=\\\"sesso\\\" value=\\\"false\\\" class=\\\"clr-radio\\\" [checked]=\\\"!show_sex\\\">\\r\\n          <label for=\\\"sex-radio2\\\" class=\\\"clr-control-label\\\">F</label>\\r\\n        </div>\\r\\n        <div class=\\\"clr-subtext-wrapper\\\">\\r\\n          <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\r\\n          <span class=\\\"clr-subtext\\\">Helper Text</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.sesso.errors\\\">\\r\\n        <alert-message *ngIf=\\\"f.sesso.errors.required\\\" msg=\\\"Il campo 'Sesso' è obbligatorio\\\"></alert-message>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Età</label>\\r\\n      <input type=\\\"number\\\" formControlName=\\\"eta\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.eta.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.eta.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.eta.errors.required\\\" msg=\\\"Il campo 'Età' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Luogo di nascita</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"luogonascita\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.luogonascita.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.luogonascita.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.luogonascita.errors.required\\\" msg=\\\"Il campo 'Luogo di nascita' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Professione</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"professione\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.professione.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.professione.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.professione.errors.required\\\" msg=\\\"Il campo 'Professione' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <h2>Dati Clinici</h2>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Lateralità</label>\\r\\n      <div class=\\\"clr-control-container clr-control-inline\\\">\\r\\n        <div class=\\\"clr-radio-wrapper\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"lat-radio1\\\" formControlName=\\\"lateralita\\\" value=\\\"true\\\" class=\\\"clr-radio\\\" [checked]=\\\"show_lat\\\">\\r\\n          <label for=\\\"lat-radio1\\\" class=\\\"clr-control-label\\\">DX</label>\\r\\n        </div>\\r\\n        <div class=\\\"clr-radio-wrapper\\\">\\r\\n          <input type=\\\"radio\\\" id=\\\"lat-radio2\\\" formControlName=\\\"lateralita\\\" value=\\\"false\\\" class=\\\"clr-radio\\\" [checked]=\\\"!show_lat\\\">\\r\\n          <label for=\\\"lat-radio2\\\" class=\\\"clr-control-label\\\">SX</label>\\r\\n        </div>\\r\\n        <div class=\\\"clr-subtext-wrapper\\\">\\r\\n          <clr-icon class=\\\"clr-validate-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\r\\n          <span class=\\\"clr-subtext\\\">Helper Text</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Lingua</label>\\r\\n      <input type=\\\"text\\\" formControlName=\\\"lingua\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lingua.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.lingua.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.lingua.errors.required\\\" msg=\\\"Il campo 'Lingua' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Scolarità</label>\\r\\n      <input type=\\\"number\\\" formControlName=\\\"scolarita\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.scolarita.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.scolarita.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.scolarita.errors.required\\\" msg=\\\"Il campo 'Scolarità' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Diagnosi</label>\\r\\n      <select clrSelect formControlName=\\\"diagnosi\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.diagnosi.errors }\\\" >\\r\\n        <option value=\\\"Nessun disturbo\\\" > Nessun disturbo </option>\\r\\n        <option value=\\\"Disturbo dello Spettro Autistico\\\" > Disturbo dello Spettro Autistico </option>\\r\\n        <option value=\\\"Malattia di Alzheimer\\\" > Malattia di Alzheimer </option>\\r\\n        <option value=\\\"Malattia di Parkinson\\\" > Malattia di Parkinson </option>\\r\\n        <option value=\\\"Schizofrenia\\\" > Schizofrenia </option>\\r\\n        <option value=\\\"Sclerosi Laterale Amiotrofica\\\" > Sclerosi Laterale Amiotrofica </option>\\r\\n        <option value=\\\"Trauma cranico\\\" > Trauma cranico </option>\\r\\n        <option value=\\\"Non nota\\\" > Non nota </option>\\r\\n        <option value=\\\"Multiple (specificare in &quot;Note&quot;)\\\"> Multiple (specificare in \\\"Note\\\") </option>\\r\\n        <option value=\\\"Altro... (da riportare in &quot;Note&quot;)\\\"> Altro... (da riportare in \\\"Note\\\") </option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.diagnosi.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.diagnosi.errors.required\\\" msg=\\\"Il campo 'Diagnosi' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <h2>Note</h2>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"altro\\\">Altre informazioni</label>\\r\\n      <div class=\\\"clr-control-container\\\">\\r\\n        <div class=\\\"clr-textarea-wrapper\\\">\\r\\n          <textarea clrTextarea formControlName=\\\"altro\\\" id=\\\"altro\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.altro.errors }\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.altro.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.altro.errors.required\\\" msg=\\\"Il campo 'Altre informazioni' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Salva dati</button>\\r\\n</form>\\r\\n\\r\\n\\r\\n<button class=\\\"btn\\\" (click)=\\\"printPat()\\\">Stampa actual-patient</button>\\r\\n<button class=\\\"btn\\\" (click)=\\\"printExam()\\\">Stampa actual-exam</button>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW0tdmlldy9leGFtLXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n//import { ClarityModule, ClrFormsNextModule } from '@clr/angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Params, ActivatedRoute } from '@angular/router';\r\n\r\nimport { User, Exam, Patient } from '../_models';\r\nimport { UserService, ExamService, PatientService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-exam-view',\r\n  templateUrl: './exam-view.component.html',\r\n  styleUrls: ['./exam-view.component.scss']\r\n})\r\nexport class ExamViewComponent implements OnInit {\r\n\r\n  constructor(private route:ActivatedRoute, \r\n        private patientService: PatientService, \r\n        private examService: ExamService, \r\n        private userService: UserService,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n  private patientForm: FormGroup;\r\n  private activeExam: Exam;\r\n  private activePatient: Patient;\r\n  private loggedUser: User;\r\n  private show_sex: boolean;\r\n  private show_lat: boolean;\r\n\r\n  ngOnInit() {\r\n    this.activeExam = this.examService.getActiveExam();\r\n    this.activePatient = this.patientService.getActivePatient();\r\n    this.loggedUser = this.userService.getLoggedUser();\r\n    this.patientForm = this.formBuilder.group({\r\n        //email: ['', [Validators.required, Validators.email]],\r\n        //password: ['', [Validators.required, Validators.minLength(6)]],\r\n        nome: [this.activePatient.nome],\r\n        cognome: [this.activePatient.cognome],\r\n        sesso: [this.activePatient.sesso],\r\n        eta: [this.activePatient.eta],\r\n        lateralita: [this.activePatient.lateralita],\r\n        luogonascita: [this.activePatient.luogonascita],\r\n        professione: [this.activePatient.professione],\r\n        scolarita: [this.activePatient.scolarita],\r\n        lingua: [this.activePatient.lingua],\r\n        altro: [this.activePatient.altro],\r\n        diagnosi: [this.activePatient.diagnosi],\r\n        data: [(''+this.activeExam.date).substring(0,10)],\r\n        esaminatore: [this.loggedUser.name+\" \"+this.loggedUser.surname]\r\n    });\r\n    this.show_sex =this.activePatient.sesso;// ((this.activePatient.sesso == \"true\")||(this.activePatient.sesso == true));\r\n    this.show_lat =this.activePatient.lateralita;// ((this.activePatient.lateralita == \"true\")||(this.activePatient.lateralita == true));\r\n    console.log(this.show_sex,this.show_lat);\r\n  }\r\n\r\n  get f() { return this.patientForm.controls; }\r\n\r\n  onSubmit() {\r\n    if (confirm(\"Sicuro di voler salvare? L'azione non è reversibile\")) {\r\n      var control = this.patientForm.controls;\r\n      var new_exam: Exam = this.activeExam;\r\n      new_exam.date = new Date(control.data.value);\r\n\r\n      var new_pat: Patient = this.activePatient;\r\n      new_pat.nome = control.nome.value;\r\n      new_pat.cognome = control.cognome.value;\r\n      new_pat.sesso = (control.sesso.value == \"true\" || control.sesso.value == true);\r\n      new_pat.eta = control.eta.value;\r\n      new_pat.lateralita = (control.lateralita.value == \"true\" || control.lateralita.value == true);\r\n      new_pat.luogonascita = control.luogonascita.value;\r\n      new_pat.professione = control.professione.value;\r\n      new_pat.scolarita = control.scolarita.value;\r\n      new_pat.lingua = control.lingua.value;\r\n      new_pat.altro = control.altro.value;\r\n      new_pat.diagnosi = control.diagnosi.value;\r\n\r\n      this.save(new_exam,new_pat);\r\n    }\r\n  }\r\n\r\n  save(e: Exam, p: Patient) {\r\n    this.patientService.savePatient(p).subscribe(data => {\r\n      var returnobj = (JSON.parse((<any>data)._body));\r\n      console.log(returnobj);\r\n      this.patientService.saveOnLocal(returnobj);\r\n    },\r\n    error => console.log(error));\r\n\r\n    this.examService.saveExam(e).subscribe(data => {\r\n      var returnobj = (JSON.parse((<any>data)._body));\r\n      console.log(returnobj);\r\n      this.examService.saveOnLocal(returnobj);\r\n    },\r\n    error => console.log(error));\r\n    //console.log(e,p);\r\n  }\r\n\r\n  printPat() {\r\n    console.log(this.activePatient);\r\n  }\r\n\r\n  printExam() {\r\n    console.log(this.activeExam);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"main-container\\\">\\r\\n    <div class=\\\"alert alert-app-level\\\">\\r\\n        [Spazio per gli alert!]\\r\\n    </div>\\r\\n    <header class=\\\"header header-6\\\">\\r\\n          <div class=\\\"branding\\\">\\r\\n            <a href=\\\"...\\\" class=\\\"nav-link\\\">\\r\\n                <clr-icon shape=\\\"bug\\\"></clr-icon>\\r\\n                <span class=\\\"title\\\">APACS</span>\\r\\n            </a>\\r\\n          </div>\\r\\n          <div class=\\\"header-nav\\\">\\r\\n            <a [routerLink]=\\\"[{ outlets: { logged: ['dashboard'] } }]\\\" outletName=[logged] routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Dashboard</a>\\r\\n            <a [routerLink]=\\\"[{ outlets: { logged: ['exams'] } }]\\\" outletName=[logged] routerLinkActive=\\\"active\\\" class=\\\"nav-link nav-text\\\">Esami</a>\\r\\n          </div>\\r\\n          <div class=\\\"header-actions\\\">\\r\\n            <clr-dropdown>\\r\\n                <button class=\\\"nav-icon\\\" clrDropdownTrigger>\\r\\n                    <clr-icon shape=\\\"user\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                </button>\\r\\n                <clr-dropdown-menu *clrIfOpen clrPosition=\\\"bottom-right\\\">\\r\\n                    <a (click)=\\\"basic = true\\\" clrDropdownItem>Log out</a>\\r\\n                </clr-dropdown-menu>\\r\\n            </clr-dropdown>\\r\\n          </div>\\r\\n\\r\\n    </header>\\r\\n    <nav class=\\\"subnav\\\">\\r\\n        [subnav]\\r\\n    </nav>\\r\\n    <div class=\\\"content-container\\\">\\r\\n        <div class=\\\"content-area\\\">\\r\\n          <router-outlet name=\\\"logged\\\"></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<clr-modal [(clrModalOpen)]=\\\"basic\\\" [clrModalSize]=\\\"'sm'\\\">\\r\\n    <h3 class=\\\"modal-title\\\">Attenzione</h3>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <p>Stai per effettuare il Logout. Sei sicuro?</p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"basic = false\\\">Annulla</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">Ok</button>\\r\\n    </div>\\r\\n</clr-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2dlZC11c2VyLXdyYXBwZXIvbG9nZ2VkLXVzZXItd3JhcHBlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { UserService } from '../_services';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-logged-user-wrapper',\r\n  templateUrl: './logged-user-wrapper.component.html',\r\n  styleUrls: ['./logged-user-wrapper.component.scss']\r\n})\r\nexport class LoggedUserWrapperComponent implements OnInit {\r\n\r\n  constructor(private router:Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    //this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\r\n    this.checkUser();\r\n  }\r\n\r\n  checkUser() {\r\n    //console.log(\"is user logged? \",this.userService.isUserLogged());\r\n    if (!this.userService.isUserLogged()) {\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"login-wrapper\\\">\\r\\n    <form class=\\\"login\\\">\\r\\n        <label class=\\\"title\\\">\\r\\n            <h3 class=\\\"welcome\\\">Benvenuti in</h3>\\r\\n            APACS\\r\\n            <h5 class=\\\"hint\\\">Utilizza le tue credenziali per accedere agli esami che hai effettuato, oppure registrati per ottenere un account.</h5>\\r\\n        </label>\\r\\n        <div class=\\\"login-group\\\">\\r\\n            <input class=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" id=\\\"login_username\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"this.username\\\">\\r\\n            <input class=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" id=\\\"login_password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"this.password\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"rememberme\\\">\\r\\n                <label for=\\\"rememberme\\\">\\r\\n                    Ricordami\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"error active\\\" [hidden]=\\\"!this.wrongCredential\\\">\\r\\n              Username o password non validi\\r\\n            </div>\\r\\n            <div class=\\\"error active\\\" [hidden]=\\\"!this.missingCredential\\\">\\r\\n              Username o password mancanti\\r\\n            </div>\\r\\n            <div class=\\\"error active\\\" [hidden]=\\\"!this.otherError\\\">\\r\\n              {{this.error}}\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">LOG IN</button>\\r\\n            <a class=\\\"signup link-pointer\\\" (click)=\\\"newUserModal = true\\\">Registrati</a>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n<clr-modal [(clrModalOpen)]=\\\"newUserModal\\\" class=\\\"modal-dialog modal-xl\\\">\\r\\n  <h3 class=\\\"modal-title\\\">Registrazione nuovo utente</h3>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-register-form></app-register-form>\\r\\n  </div>\\r\\n</clr-modal>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../_models';\r\nimport { UserService } from '../_services';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  wrongCredential = false;\r\n  missingCredential = false;\r\n  otherError = false;\r\n  error: string;\r\n\r\n  constructor(private router:Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.userService.isUserLogged()) {\r\n      this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.tryLogin();\r\n  }\r\n\r\n  tryLogin() {\r\n    this.userService.logIn(this.username,this.password).subscribe( \r\n      response => {\r\n        this.onSuccess(response);\r\n      }, \r\n      error => {\r\n        this.onFail(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSuccess(r) {\r\n    //console.log(\"Login effettuata correttamente.\");\r\n    var uid = JSON.parse(r._body).uid;\r\n    this.userService.getUser(uid).subscribe( data => {\r\n      var usr = JSON.parse((<any>data)._body) as User;\r\n      this.userService.logUser(usr);\r\n      this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\r\n    });\r\n  }\r\n\r\n  onFail(e) { \r\n    console.log(\"Fail on login: \", e);\r\n    if (e.status == \"400\" ) {\r\n      this.missingCredential = true;\r\n    }\r\n    else if (e.status == \"401\" ) {\r\n      this.clean();\r\n      this.wrongCredential = true;\r\n    }\r\n    else {\r\n      this.clean();\r\n      this.otherError = true;\r\n      this.error = \"http error \"+e.status+\" - \"+JSON.parse(e._body).message;\r\n    }\r\n  }\r\n\r\n  checkUser() {\r\n    if (this.userService.isUserLogged()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  clean() {\r\n    this.wrongCredential = false;\r\n    this.missingCredential = false;\r\n    this.otherError = false;\r\n    this.error = \"\";\r\n  }\r\n\r\n}\r\n","module.exports = \"<form clrForm clrLayout=\\\"vertical\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Username</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.username.errors\\\">\\r\\n      <alert-message *ngIf=\\\"f.username.errors.required\\\" msg=\\\"Il campo 'Username' è obbligatorio\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Email</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"f.email.errors\\\">\\r\\n      <alert-message *ngIf=\\\"submitted && f.email.errors.required\\\" msg=\\\"Il campo 'Email' è obbligatorio\\\"></alert-message>\\r\\n      <alert-message *ngIf=\\\"f.email.errors.email\\\" msg=\\\"Indirizzo email non valido\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Password</label>\\r\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"f.password.errors\\\">\\r\\n      <alert-message *ngIf=\\\"submitted && f.password.errors.required\\\" msg=\\\"Il campo 'Password' è obbligatorio\\\"></alert-message>\\r\\n      <alert-message *ngIf=\\\"f.password.errors.minlength\\\" msg=\\\"La password dev'essere lunga almeno 6 caratteri\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Conferma Password</label>\\r\\n        <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"errors\\\" *ngIf=\\\"f.confirmPassword.errors\\\">\\r\\n      <alert-message *ngIf=\\\"submitted && f.confirmPassword.errors.required\\\" msg=\\\"Il campo 'Conferma password' è obbligatorio\\\"></alert-message>\\r\\n      <alert-message *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\" msg=\\\"Le due password devono essere uguali\\\"></alert-message>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Nome</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Cognome</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"surname\\\" class=\\\"form-control\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Registrati</button>\\r\\n    </div>\\r\\n</form>\"","module.exports = \".noFloat {\\n  float: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXItZm9ybS9DOlxcVXNlcnNcXE1hcmNvXFxEZXNrdG9wXFxhcGFjcy1jbGllbnQvc3JjXFxhcHBcXHJlZ2lzdGVyLWZvcm1cXHJlZ2lzdGVyLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci1mb3JtL3JlZ2lzdGVyLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm9GbG9hdCB7XHJcbiAgZmxvYXQ6IG5vbmU7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { MustMatch } from '../_helpers/must-match.validator';\r\nimport { User } from '../_models';\r\nimport { UserService } from '../_services';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-register-form',\r\n  templateUrl: './register-form.component.html',\r\n  styleUrls: ['./register-form.component.scss']\r\n})\r\n\r\nexport class RegisterFormComponent implements OnInit {\r\n    registerForm: FormGroup;\r\n    submitted = false;\r\n\r\n    new_user: User;\r\n\r\n    constructor(private formBuilder: FormBuilder, private userService: UserService, private router:Router) { }\r\n\r\n    ngOnInit() {\r\n        this.registerForm = this.formBuilder.group({\r\n            name: [''],\r\n            surname: [''],\r\n            username: ['', Validators.required],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', [Validators.required, Validators.minLength(6)]],\r\n            confirmPassword: ['', Validators.required]\r\n        }, {\r\n            validator: MustMatch('password', 'confirmPassword')\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.registerForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        // stop here if form is invalid\r\n        if (this.registerForm.invalid) {\r\n            return;\r\n        }\r\n        this.mapFromForm(this.registerForm.value);\r\n        this.askForRegistration(this.new_user);\r\n    }\r\n\r\n    mapFromForm(form_data) {\r\n      this.new_user = new User();\r\n      this.new_user.username = form_data.username;\r\n      this.new_user.password = form_data.password;\r\n      this.new_user.email = form_data.email;\r\n      this.new_user.name = form_data.name;\r\n      this.new_user.surname = form_data.surname;\r\n      this.new_user.id = null;\r\n    }\r\n\r\n    askForRegistration(u: User) {\r\n      console.log(\"asking to register user: \", u);\r\n      this.userService.register(u).subscribe(data => {\r\n        console.log(\"registered user: \", data);\r\n        this.userService.logIn(u.username, u.password).subscribe(response => {\r\n          var new_id = (JSON.parse((<any>response)._body)).uid;\r\n          //console.log(new_id);\r\n          this.userService.getUser(new_id).subscribe( answ => {\r\n            var usr = JSON.parse((<any>answ)._body) as User;\r\n            this.userService.logUser(usr);\r\n            this.router.navigate(['main',{ outlets: { logged: ['dashboard'] } }]);\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        })\r\n      });\r\n    }\r\n}","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-block\\\">\\r\\n      <h4 class=\\\"card-title\\\">I tuoi ultimi esami</h4>\\r\\n  </div>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let exam of lastExams\\\">\\r\\n        {{ exam.id }} - {{exam.date}}\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"getMyExam()\\\">\\r\\n        GET ALL MY EXAMS\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"createNewExam()\\\">\\r\\n        CREATE NEW EXAM AS CURRENT USER\\r\\n    </button>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"card-block\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"getActualExamId()\\\">\\r\\n        GET ACTUAL EXAM ID\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"test(5)\\\">\\r\\n        Last 5 exams\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MustMatch } from '../_helpers/must-match.validator';\r\nimport { User, Exam } from '../_models';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UserService } from '../_services';\r\nimport { ExamService } from '../_services';\r\nimport { PatientService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  private lastExams: Exam[];\r\n\r\n  constructor(private examService: ExamService, private patientService: PatientService) {\r\n    this.examService.loadAllMyExams();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMyLastExams(5);\r\n  }\r\n\r\n  getMyLastExams(i:number) {\r\n    this.examService.getMyExamList().subscribe(data => {\r\n      var obj = JSON.parse((<any>data)._body);\r\n      this.lastExams = obj.slice(obj.length-i);\r\n    });\r\n  }\r\n\r\n  createNewExam() {\r\n    this.patientService.createNewPatient().subscribe(response => {\r\n      var pid = (JSON.parse( (<any>response)._body)).id;\r\n      this.examService.createNewExam(pid).subscribe(data => {\r\n        var new_exam = JSON.parse((<any>data)._body);\r\n        console.log(new_exam);\r\n        this.examService.saveOnLocal(new_exam);\r\n        this.getMyLastExams(5);\r\n      });\r\n    });\r\n  }\r\n\r\n  getActualExamId() {\r\n    console.log(this.examService.getActiveExam());\r\n  }\r\n\r\n  test(i) {\r\n    this.getMyLastExams(5);\r\n  };\r\n}\r\n","module.exports = \"\\r\\n<clr-modal [(clrModalOpen)]=\\\"editUserModal\\\">\\r\\n  <h3 class=\\\"modal-title\\\">Modifica i tuoi dati</h3>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form clrForm clrLayout=\\\"vertical\\\" [formGroup]=\\\"editUserForm\\\" class=\\\"clr-form clr-form-horizontal\\\">\\r\\n      <clr-input-container class=\\\"form-group\\\">\\r\\n        <label for=\\\"user-username\\\">Username:</label>\\r\\n        <input clrInput type=\\\"text\\\" [value]=\\\"this.logged_user.username\\\" placeholder=\\\"{{this.logged_user.username}}\\\" formControlName=\\\"username\\\" name=\\\"user-username\\\" [ngClass]=\\\"{ 'is-invalid': f.username.errors }\\\">\\r\\n      </clr-input-container>\\r\\n      <div class=\\\"errors\\\" *ngIf=\\\"submitted && f.username.errors\\\">\\r\\n        <alert-message *ngIf=\\\"f.username.errors.required\\\" msg=\\\"Il campo 'Username' è obbligatorio\\\"></alert-message>\\r\\n      </div>\\r\\n\\r\\n      <clr-password-container class=\\\"form-group\\\">\\r\\n        <label for=\\\"user-password\\\">Password:</label>\\r\\n        <input clrPassword placeholder=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"user-password\\\" [ngClass]=\\\"{ 'is-invalid': (f.password.touched && f.password.errors) }\\\">\\r\\n      </clr-password-container>\\r\\n      <div class=\\\"errors\\\" *ngIf=\\\"f.password.touched && f.password.errors\\\">\\r\\n        <alert-message *ngIf=\\\"f.password.errors.required\\\" msg=\\\"Il campo 'Password' è obbligatorio\\\"></alert-message>\\r\\n        <alert-message *ngIf=\\\"f.password.errors.minlength\\\" msg=\\\"La password dev'essere lunga almeno 6 caratteri\\\"></alert-message>\\r\\n      </div>\\r\\n\\r\\n      <clr-password-container class=\\\"form-group\\\">\\r\\n        <label for=\\\"confirm-password\\\">Conferma password:</label>\\r\\n        <input clrPassword placeholder=\\\"conferma password\\\" formControlName=\\\"confirmPassword\\\" name=\\\"confirm-password\\\" [ngClass]=\\\"{ 'is-invalid':(f.confirmPassword.touched && f.confirmPassword.errors)}\\\">\\r\\n      </clr-password-container>\\r\\n      <div class=\\\"errors\\\" *ngIf=\\\"f.confirmPassword.touched && f.confirmPassword.errors\\\">\\r\\n        <alert-message *ngIf=\\\"f.confirmPassword.errors.required\\\" msg=\\\"Il campo 'Conferma password' è obbligatorio\\\"></alert-message>\\r\\n        <alert-message *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\" msg=\\\"Le due password devono essere uguali\\\"></alert-message>\\r\\n      </div>\\r\\n\\r\\n      <clr-input-container class=\\\"form-group\\\">\\r\\n        <label for=\\\"user-mail\\\">eMail:</label>\\r\\n        <input clrInput type=\\\"text\\\" placeholder=\\\"{{this.logged_user.email}}\\\" formControlName=\\\"email\\\" name=\\\"user-email\\\" [ngClass]=\\\"{ 'is-invalid': f.email.errors }\\\">\\r\\n      </clr-input-container>\\r\\n      <div class=\\\"errors\\\" *ngIf=\\\"f.email.errors\\\">\\r\\n        <alert-message *ngIf=\\\"submitted && f.email.errors.required\\\" msg=\\\"Il campo 'Email' è obbligatorio\\\"></alert-message>\\r\\n        <alert-message *ngIf=\\\"f.email.errors.email\\\" msg=\\\"Indirizzo email non valido\\\"></alert-message>\\r\\n      </div>\\r\\n\\r\\n      <clr-input-container class=\\\"form-group\\\">\\r\\n        <label for=\\\"user-name\\\">Nome:</label>\\r\\n        <input clrInput type=\\\"text\\\" placeholder=\\\"{{this.logged_user.name}}\\\" formControlName=\\\"name\\\" name=\\\"user-name\\\">\\r\\n      </clr-input-container>\\r\\n\\r\\n      <clr-input-container class=\\\"form-group\\\">\\r\\n        <label for=\\\"user-surname\\\">Cognome:</label>\\r\\n        <input clrInput type=\\\"text\\\" placeholder=\\\"{{this.logged_user.surname}}\\\" formControlName=\\\"surname\\\" name=\\\"user-surname\\\">\\r\\n      </clr-input-container>\\r\\n  \\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"editUserModal = false; onAbort();\\\">Annulla</button>\\r\\n        <button [disabled]=\\\"!this.editUserForm.valid\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editUserModal = false; onSave();\\\">Salva</button>\\r\\n      </div>\\r\\n    </form> \\r\\n  </div>\\r\\n</clr-modal>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-block\\\">\\r\\n      <h4 class=\\\"card-title\\\">Benvenuto <em>{{this.presentation_name}}</em></h4>\\r\\n      <p class=\\\"card-text\\\">\\r\\n      Questi sono i dati del tuo profilo\\r\\n      </p>\\r\\n  </div>\\r\\n\\r\\n  <ul class=\\\"list-group list-group-flush card-block\\\">\\r\\n    <li class=\\\"clr-row\\\">\\r\\n      <div class=\\\"clr-col-4\\\">\\r\\n        ID:\\r\\n      </div>\\r\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.id}}</div>\\r\\n    </li>\\r\\n    <li class=\\\"clr-row\\\">\\r\\n      <div class=\\\"clr-col-4\\\">\\r\\n        Username:\\r\\n      </div>\\r\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.username}}</div>\\r\\n    </li>\\r\\n    <li class=\\\"clr-row\\\">\\r\\n      <div class=\\\"clr-col-4\\\">\\r\\n        eMail:\\r\\n      </div>\\r\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.email}}</div>\\r\\n    </li>\\r\\n    <li class=\\\"clr-row\\\">\\r\\n      <div class=\\\"clr-col-4\\\">\\r\\n        Nome:\\r\\n      </div>\\r\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.name}}</div>\\r\\n    </li>\\r\\n    <li class=\\\"clr-row\\\">\\r\\n      <div class=\\\"clr-col-4\\\">\\r\\n        Cognome:\\r\\n      </div>\\r\\n      <div class=\\\"clr-col-8\\\">{{this.logged_user.surname}}</div>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" title=\\\"Modifica il tuo profilo\\\" (click)=\\\"editUserModal = true\\\">\\r\\n        <clr-icon shape=\\\"pencil\\\"></clr-icon> Modifica profilo\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItY29tcG9uZW50L3VzZXItY29tcG9uZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MustMatch } from '../_helpers/must-match.validator';\r\nimport { User } from '../_models';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UserService } from '../_services';\r\n\r\n@Component({\r\n  selector: 'app-user-component',\r\n  templateUrl: './user-component.component.html',\r\n  styleUrls: ['./user-component.component.scss']\r\n})\r\nexport class UserComponentComponent implements OnInit {\r\n\r\n  public closeResult: string;\r\n  public logged_user: User;\r\n  public presentation_name: string;\r\n  editUserForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private modalService: NgbModal, private userService: UserService) { }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', centered: true}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any) {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      console.log('Modal dismissed by pressing ESC');\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      console.log('Modal dismissed by clicking on a backdrop');\r\n    } else {\r\n      console.log(`Modal dismissed with: ${reason}`);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.logged_user = this.userService.getLoggedUser() as User;\r\n    this.presentation_name = this.logged_user.username;\r\n    if (!(this.logged_user.name === \"\")) {\r\n      this.presentation_name = this.logged_user.name;\r\n    }\r\n    this.initFormData();\r\n  }\r\n\r\n  get f() { return this.editUserForm.controls; }\r\n\r\n  initForm() {\r\n    this.editUserForm = this.formBuilder.group({\r\n        name: [''],\r\n        surname: [''],\r\n        username: ['', Validators.required],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: ['', [Validators.required, Validators.minLength(6)]],\r\n        confirmPassword: ['', Validators.required]\r\n    }, {\r\n        validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  initFormData() {\r\n    this.editUserForm.controls['username'].setValue(this.logged_user.username);\r\n    this.editUserForm.controls['email'].setValue(this.logged_user.email);\r\n    this.editUserForm.controls['name'].setValue(this.logged_user.name);\r\n    this.editUserForm.controls['surname'].setValue(this.logged_user.surname);\r\n  }\r\n\r\n  printData() {\r\n    console.log(this.logged_user);\r\n  }\r\n\r\n  onSave() {\r\n    if (!this.save()) this.abort();\r\n    else {\r\n      this.logged_user.username = this.editUserForm.controls.username.value;\r\n      this.logged_user.email = this.editUserForm.controls.email.value;\r\n      this.logged_user.password = this.editUserForm.controls.password.value;\r\n      this.logged_user.name = this.editUserForm.controls.name.value;\r\n      this.logged_user.surname = this.editUserForm.controls.surname.value;\r\n      this.userService.updateUser(this.logged_user).subscribe(data => {\r\n        var new_usr = JSON.parse((<any>data)._body);\r\n        this.userService.logUser(new_usr);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      })\r\n    }\r\n  }\r\n\r\n  save() {\r\n    return confirm(\"Sicuro di voler salvare? L'azione non è reversibile\");\r\n  }\r\n\r\n  onAbort() {\r\n    this.abort();\r\n  }\r\n\r\n  abort() { }\r\n\r\n  getAllUsers() {\r\n    this.userService.getAllUsers().subscribe(data => {\r\n      console.log(this.userService.allUsers);\r\n    });\r\n  }\r\n\r\n  logIn() {\r\n    this.userService.logIn(\"admin\",\"password\").subscribe(data => {\r\n      console.log(this.userService.loggedUserID);\r\n    });\r\n  }\r\n\r\n  logged() {\r\n    //this.userService.getLoggedUser().subscribe(data => {\r\n      console.log(this.userService.getLoggedUser());\r\n    //})\r\n  }\r\n\r\n  print() {\r\n    console.log(this.editUserForm.controls);\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // URL of development API\r\n  apiUrl: 'https://web.math.unipd.it/apacs'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}